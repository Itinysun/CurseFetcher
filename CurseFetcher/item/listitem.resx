<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxInstalled.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>